<!DOCTYPE html>
<html>
<head>
  <title>Cadastro de Produtos - CRM</title>
  <link rel="stylesheet" href="/css/style.css">
  <style>
    .form-produto {
      background: white;
      padding: 30px;
      border-radius: 8px;
      box-shadow: 0 2px 10px rgba(0,0,0,0.1);
      max-width: 600px;
    }
    
    .form-group {
      margin-bottom: 20px;
    }
    
    .form-group label {
      display: block;
      margin-bottom: 8px;
      font-weight: bold;
      color: #333;
    }
    
    .form-group input, 
    .form-group select {
      width: 100%;
      padding: 12px;
      border: 1px solid #ddd;
      border-radius: 4px;
      font-size: 16px;
    }
    
    .form-group input:focus, 
    .form-group select:focus {
      outline: none;
      border-color: #1aa5fb;
      box-shadow: 0 0 0 2px rgba(26, 165, 251, 0.2);
    }
    
    .form-row {
      display: flex;
      gap: 20px;
    }
    
    .form-row .form-group {
      flex: 1;
    }
    
    .btn-submit {
      background: #1aa5fb;
      color: white;
      border: none;
      padding: 12px 30px;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
      font-weight: bold;
      margin-right: 10px;
    }
    
    .btn-submit:hover {
      background: #0d8bd6;
    }
    
    .btn-reset {
      background: #6c757d;
      color: white;
      border: none;
      padding: 12px 30px;
      border-radius: 4px;
      font-size: 16px;
      cursor: pointer;
    }
    
    .btn-reset:hover {
      background: #5a6268;
    }
    
    .info-text {
      color: #666;
      font-size: 14px;
      margin-top: 5px;
    }
    
    #loading-indicator {
      display: none;
      align-items: center;
      gap: 10px;
      margin-top: 20px;
      padding: 15px;
      background: #f8f9fa;
      border-radius: 4px;
      border-left: 4px solid #1aa5fb;
    }
    
    .spinner {
      width: 20px;
      height: 20px;
      border: 2px solid #f3f3f3;
      border-top: 2px solid #1aa5fb;
      border-radius: 50%;
      animation: spin 1s linear infinite;
    }
    
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
  </style>
</head>
<body>
  <%- include('partials/sidebar') %>

  <div style="padding: 20px; margin-left: 210px;">
    <h2 class="title-page">Cadastro de Produtos</h2>
    
    <div class="form-produto">
      <form id="form-cadastro-produto">
        <div class="form-group">
          <label for="produto">Produto *</label>
          <input type="text" id="produto" name="produto" required>
          <div class="info-text">Nome do produto</div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="custo">Custo dos Materiais (R$) *</label>
            <input type="number" id="custo" name="custo" step="0.01" min="0" required>
            <div class="info-text">Custo dos materiais utilizados</div>
          </div>

          <div class="form-group">
            <label for="preco">Preço de Venda (R$) *</label>
            <input type="number" id="preco" name="preco" step="0.01" min="0" required>
            <div class="info-text">Preço de venda ao cliente</div>
          </div>
        </div>

        <div class="form-row">
          <div class="form-group">
            <label for="tipo">Tipo *</label>
            <select id="tipo" name="tipo" required>
              <option value="">Selecione o tipo</option>
              <option value="unidade">Unidade</option>
              <option value="metro">Metro</option>
            </select>
            <div class="info-text">Tipo de comercialização</div>
          </div>

          <div class="form-group">
            <label for="minimo">Valor Mínimo (R$)</label>
            <input type="number" id="minimo" name="minimo" step="0.01" min="0" value="0">
            <div class="info-text">Valor mínimo para produtos por metro²</div>
          </div>
        </div>

        <div style="display: flex; gap: 20px; margin-top: 30px;">
          <button type="submit" class="btn-submit">Cadastrar Produto</button>
          <button type="reset" class="btn-reset">Limpar Campos</button>
        </div>

        <div id="loading-indicator">
          <div class="spinner"></div>
          <span>Cadastrando produto...</span>
        </div>
      </form>
    </div>
  </div>

  <div id="notification-container"></div>

  <script>
    const notificationContainer = document.getElementById('notification-container');
    const loadingIndicator = document.getElementById('loading-indicator');
    const form = document.getElementById('form-cadastro-produto');

    // Função para mostrar notificação
    function showNotification(message, type = 'success', duration = 3000) {
      const notification = document.createElement('div');
      notification.classList.add('notification');
      notification.textContent = message;

      if (type === 'error') {
        notification.classList.add('error');
      }

      notificationContainer.prepend(notification);
      void notification.offsetWidth; // Força reflow
      notification.classList.add('show');

      setTimeout(() => {
        notification.classList.remove('show');
        notification.addEventListener('transitionend', () => {
          notification.remove();
        }, { once: true });
      }, duration);
    }

    // Funções de loading
    function showLoading() {
      loadingIndicator.style.display = 'flex';
      document.body.classList.add('loading');
    }

    function hideLoading() {
      loadingIndicator.style.display = 'none';
      document.body.classList.remove('loading');
    }

    // Validação do formulário
    form.addEventListener('submit', async (event) => {
      event.preventDefault();
      
      showLoading();

      const formData = new FormData(form);
      const data = Object.fromEntries(formData.entries());

      // Validações
      if (!data.produto.trim()) {
        showNotification('Nome do produto é obrigatório.', 'error');
                hideLoading();
        return;
      
      }

      if (!data.custo || parseFloat(data.custo) <= 0) {
        showNotification('Custo deve ser maior que zero.', 'error');
        hideLoading();
        return;
                
      }

      if (!data.preco || parseFloat(data.preco) <= 0) {
        showNotification('Preço deve ser maior que zero.', 'error');
        hideLoading();
        return;
                
      }

      if (!data.tipo) {
        showNotification('Selecione o tipo do produto.', 'error');
        hideLoading();
        return;
                
      }

      try {
        const response = await fetch('/cadastrar-produto', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(data)
        });

        const result = await response.json();

        if (response.ok) {
          showNotification(result.message, 'success');
          form.reset();
        } else {
          showNotification(result.message, 'error');
        }
      } catch (error) {
        console.error('Erro ao cadastrar produto:', error);
        showNotification('Erro de conexão ao cadastrar produto.', 'error');
      } finally {
        hideLoading();
      }
    });

    // Validação em tempo real para valor mínimo quando tipo for metro
    document.getElementById('tipo').addEventListener('change', function() {
      const minimoGroup = document.getElementById('minimo').closest('.form-group');
      const infoText = minimoGroup.querySelector('.info-text');
      
      if (this.value === 'metro') {
        infoText.textContent = 'Valor mínimo para produtos por metro² (recomendado)';
      } else {
        infoText.textContent = 'Valor mínimo (normalmente não necessário para produtos por unidade)';
      }
    });
  </script>
</body>
</html>
